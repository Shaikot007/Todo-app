{"version":3,"sources":["reduxConstant/todosConstant.js","reduxStore/reduxStore.js","reduxReducer/todoReducer.js","Container/Todolist.js","Container/Todo.js","reduxAction/todosAction.js","App.js","reportWebVitals.js","index.js"],"names":["SUBMIT","CHECK","TOGGLE","EDIT","DELETE","store","createStore","state","action","type","todo","map","key","check","checked","toggle","edittodo","filter","delete","window","__REDUX_DEVTOOLS_EXTENSION__","Todolist","className","this","props","todos","InputGroup","InputGroupAddon","addonType","InputGroupText","Input","addon","onClick","checkedTodo","placeholder","value","onChange","event","editTodo","target","style","textDecoration","Button","size","color","toggleButton","deleteTodo","React","Component","Todo","handleChange","setState","handleSubmit","preventDefault","currentTodo","Date","now","addTodo","handleCheck","toggleCheck","handleToggle","handleEdit","editodo","handleDelete","Form","onSubmit","href","rel","Container","connect","dispatch","addTodoAction","toggleCheckAction","toggleButtonAction","editTodoAction","deleteTodoAction","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.470dba1e.chunk.js","sourcesContent":["//Redux constant\r\n\r\nexport const SUBMIT = \"SUBMIT\";\r\nexport const CHECK = \"CHECK\";\r\nexport const TOGGLE = \"TOGGLE\";\r\nexport const EDIT = \"EDIT\";\r\nexport const DELETE = \"DELETE\";","import { createStore } from \"redux\";\r\nimport { todoReducer } from \"../reduxReducer/todoReducer\"; \r\n\r\n//Redux\r\n\r\nexport const store = createStore(\r\n  todoReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);","import { SUBMIT, CHECK, TOGGLE, EDIT, DELETE } from \"../reduxConstant/todosConstant\";\r\n\r\n//Redux reducer\r\n\r\nexport const todoReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case SUBMIT:\r\n      return [...state, action.todo];\r\n    case CHECK:\r\n      return [...state].map(todo => todo.key === action.check ? {...todo, checked: !todo.checked} : todo);\r\n    case TOGGLE:\r\n      return [...state].map(todo => todo.key === action.toggle ? {...todo, toggle: !todo.toggle} : todo);\r\n    case EDIT:\r\n      return [...state].map(todo => todo.key === action.key ? {...todo, todo: todo.todo = action.edittodo} : todo);\r\n    case DELETE:\r\n      return [...state].filter(todo => todo.key !== action.delete);\r\n    default:\r\n      return state;\r\n  }\r\n};","import React from 'react';\r\nimport './Todolist.css';\r\nimport { InputGroup, InputGroupAddon, InputGroupText, Input, Button } from 'reactstrap';\r\n\r\nclass Todolist extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"TodoList\">\r\n        {this.props.todos.map(todo => \r\n          <div className=\"TodoItem\" key={todo.key}>\r\n            <InputGroup>\r\n              <InputGroupAddon addonType=\"prepend\">\r\n                <InputGroupText>\r\n                  <Input addon className=\"InputCheckBox\" type=\"checkbox\" onClick={() => this.props.checkedTodo(todo.key)}/>\r\n                </InputGroupText>\r\n              </InputGroupAddon>\r\n              { todo.toggle ? \r\n\r\n                <Input className=\"EditOrSave\" type=\"text\" placeholder=\"Edit your todo here\" value={todo.todo} \r\n                  onChange={(event) => this.props.editTodo(event.target.value, todo.key)} /> : \r\n                \r\n                <Input className=\"EditOrSave\" type=\"text\" value={todo.todo} style={todo.checked ? {textDecoration: \"line-through\"} : null}  \r\n                  onChange={() => {}} />\r\n              }\r\n                <Button size=\"sm\" color=\"warning\" className=\"EditOrSaveButton\" onClick={() => this.props.toggleButton(todo.key)}>{todo.toggle ? \"Save\" : \"Edit\"}</Button>\r\n                <Button size=\"sm\" color=\"danger\" className=\"DeleteButton\" onClick={() => this.props.deleteTodo(todo.key)}>Delete</Button>\r\n            </InputGroup>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Todolist;","import React from 'react';\r\nimport './Todo.css';\r\nimport Todolist from './Todolist';\r\nimport { Form, Input, Button } from 'reactstrap';\r\nimport { addTodoAction, toggleCheckAction, toggleButtonAction, editTodoAction, deleteTodoAction } from \"../reduxAction/todosAction\";\r\nimport { connect } from \"react-redux\";\r\n\r\n//React\r\n\r\nclass Todo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      todo: \"\"\r\n    }\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      todo: event.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (this.state.todo !== \"\") {\r\n      const currentTodo = {\r\n        todo: this.state.todo,\r\n        key: Date.now(),\r\n        toggle: false,\r\n        checked: false\r\n      }\r\n      this.props.addTodo(currentTodo);\r\n      this.setState({\r\n        todo: \"\"\r\n      })\r\n    }\r\n  }\r\n\r\n  handleCheck = (key) => {\r\n    this.props.toggleCheck(key);\r\n  }\r\n\r\n  handleToggle = (key) => {\r\n    this.props.toggleButton(key);\r\n  }\r\n\r\n  handleEdit = (todo, key) => {\r\n    const editodo = { todo: todo, key: key };\r\n    this.props.editTodo(editodo);\r\n  }\r\n\r\n  handleDelete = (key) => {\r\n    this.props.deleteTodo(key);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Todo\">\r\n        <header>\r\n          <h4>Type your todo here</h4>\r\n        </header>\r\n        <div className=\"TodoFormBody\">\r\n          <Form className=\"TodoForm\" onSubmit={this.handleSubmit}>\r\n            <Input className=\"TodoFormInput\" type='text' placeholder=\"Enter your todo here\" value={this.state.todo} onChange={this.handleChange} />\r\n            <Button size=\"md\" color=\"success\" className=\"TodoFormButton\" type=\"submit\">Submit</Button>\r\n          </Form>\r\n          <Todolist todos={this.props.todo} checkedTodo={this.handleCheck} toggleButton={this.handleToggle} editTodo={this.handleEdit} deleteTodo={this.handleDelete} />\r\n        </div>\r\n        <footer>\r\n          <p>Made by <a href=\"https://github.com/Shaikot007\" target=\"_blank\" rel=\"noopener noreferrer\">Shaikot</a></p>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//React redux\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { todo: state }\r\n};\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addTodo: (currentTodo) => {\r\n      dispatch(addTodoAction(currentTodo))\r\n    },\r\n    toggleCheck: (key) => {\r\n      dispatch(toggleCheckAction(key))\r\n    },\r\n    toggleButton: (key) => {\r\n      dispatch(toggleButtonAction(key))\r\n    },\r\n    editTodo: (editodo) => {\r\n      dispatch(editTodoAction(editodo))\r\n    },\r\n    deleteTodo: (key) => {\r\n      dispatch(deleteTodoAction(key))\r\n    },\r\n  }\r\n};\r\n\r\nconst Container = connect(mapStateToProps, mapDispatchToProps)(Todo);\r\n\r\nexport default Container;","import { SUBMIT, CHECK, TOGGLE, EDIT, DELETE } from \"../reduxConstant/todosConstant\";\r\n\r\n//Redux action\r\n\r\nexport const addTodoAction = (currentTodo) => {\r\n  return {\r\n    type: SUBMIT,\r\n    todo: currentTodo\r\n  }\r\n};\r\n\r\nexport const toggleCheckAction = (key) => {\r\n  return {\r\n    type: CHECK,\r\n    check: key\r\n  }\r\n};\r\n\r\nexport const toggleButtonAction = (key) => {\r\n  return {\r\n    type: TOGGLE,\r\n    toggle: key\r\n  }\r\n};\r\n\r\nexport const editTodoAction = (editodo) => {\r\n  return {\r\n    type: EDIT,\r\n    edittodo: editodo.todo,\r\n    key: editodo.key\r\n  }\r\n};\r\n\r\nexport const deleteTodoAction = (key) => {\r\n  return {\r\n    type: DELETE,\r\n    delete: key\r\n  }\r\n};","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./reduxStore/reduxStore\";\nimport Container from \"./Container/Todo\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Container />\n      </Provider>\n    );\n  }\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}